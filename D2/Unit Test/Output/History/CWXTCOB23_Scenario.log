
***************** Output from TTTRUNNR *****************

 STTR043I Initializing simulation environment for: COBOL V4
 STTR043I Initializing simulation environment for: COBOL V5
 STTR011I totaltest zTargetRunner v170200 on 2018-10-31 06:08.56��������������������������������������
 STTR012I Options set to EXIT(),STUBS(ON),REPEAT(0),ARGTYPE(��������)
 STTR013I Processing test suite CWXTCOB2
 STTR014I Processing test scenario CWXTCOB2
 STTR028I Processing test case CWXTCOB2
 STTR006I Executing target CWXTCOB2
 STTR008I All targets successfully executed

***************** Output from TTOUT *****************

 ---BNDTARGT---entry
 --->>>modName = CWXTCOB2, epName = CWXTCOB2
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB2
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 3, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---BNDTARGT---entry
 --->>>modName = CWXTCOB2, epName = CWXTCOB2
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB2
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getE: rc, count = 3, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDTARGT---exit
 ---IDRDDIO---entry
 --->>>modName = CWXTCOB2, csectName = CWXTCOB2
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB2
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  IDRU: Creation Date = 2018291, Length = 40
   data = c3e7c3e6e7e3c3d6c2f209394bdb7a18017b679865e19c5106537760000000000000000000000000
   program = CWXTCOB2, ddio(25) = SALESSUP.ISPW.PLAY.QA.SSD
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---IDRDDIO---exit
 ---BNDHOOK---entry
 --->>>modName = CWXTCOB2, pgmName = CWXTCOB2, vName = CWXTDATE
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB2
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getD: rc, count = 75, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDHOOK---exit
 ---SUBPGM---entry
 name: CWXTDATE,
 token: 00000000, 0;
 ---SUBPGMcxx---entry
 token: 00000000, 0
 assertYN:
 ---SUBPGMcxx---exit
 ---SUBPGM---exit  newSubPgm: 3E03D028
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 3
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---BNDHOOK---entry
 --->>>modName = CWXTCOB2, pgmName = CWXTCOB2, vName = CWXTSUB2
 ---openW_includeName---entry
 --->>>moduleName = CWXTCOB2
  openW: rc = 0, rs = <0X00000000>.
  includeName: rc = 0, rs = <0X00000000>.
 ---openW_includeName---exit
  getD: rc, count = 75, rs = <0X83000800>.
 ---closeW---entry
  closeW: rc = 0, rs = <0X00000000>
 ---closeW---exit
 ---BNDHOOK---exit
 ---SUBPGM---entry
 name: CWXTSUB2,
 token: 00000000, 0;
 ---SUBPGMcxx---entry
 token: 00000000, 0
 assertYN:
 ---SUBPGMcxx---exit
 ---SUBPGM---exit  newSubPgm: 3DFEF028
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBCALL---entry
 ---addSubCall---entry
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 deleting AVsOut
 ---~subCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---addSubCall---entry
 token: 00000000, 0; rc: 0
 ---initAssertFlag---entry
 ---initAssertFlag---exit
 ---addSubCall---exit
 ---addSubCall---exit
 ---~subCall---entry
 ---~subCall---exit
 ---SUBCALL---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 0
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 1
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---SUBOUT---entry
 ---addOutArg---entry
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvOut---entry
 AVOut #: 2
 ---addAvOut---exit
 ---addOutArg---exit
 ---SUBOUT---exit
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 3, callTemp: -1
 ---nextSubCallTemp---exit: 0
 ---storeAVsInLive---entry
 Live size: 4, AVsOutSz size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 3, callTemp: 0
 ---nextSubCallTemp---exit: 1
 ---storeAVsInLive---entry
 Live size: 4, AVsOutSz size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 5, callTemp: -1
 ---nextSubCallTemp---exit: 0
 ---storeAVsInLive---entry
 Live size: 3, AVsOutSz size: 3
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 3
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 3, callTemp: 1
 ---nextSubCallTemp---exit: 2
 ---storeAVsInLive---entry
 Live size: 4, AVsOutSz size: 4
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 2
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---setData---entry
 cL: 6
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 3
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 4
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 5, callTemp: 0
 ---nextSubCallTemp---exit: 1
 ---storeAVsInLive---entry
 Live size: 3, AVsOutSz size: 3
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 3
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 5, callTemp: 1
 ---nextSubCallTemp---exit: 2
 ---storeAVsInLive---entry
 Live size: 3, AVsOutSz size: 3
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 3
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 5, callTemp: 2
 ---nextSubCallTemp---exit: 3
 ---storeAVsInLive---entry
 Live size: 3, AVsOutSz size: 3
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 3
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
 ---DOSBCALL---entry
 parmlist: X'37D91188'
 ---doCall---entry
 parmlist: X'37D91188'
 ---nextSubCallTemp---entry
 stubbedCalls: 5, callTemp: 3
 ---nextSubCallTemp---exit: 4
 ---storeAVsInLive---entry
 Live size: 3, AVsOutSz size: 3
 ---setData---entry
 cL: 1
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 0
 ---addAvInLive---exit
 ---setData---entry
 cL: 8
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 1
 ---addAvInLive---exit
 ---setData---entry
 cL: 4
 ---setData---exit
 ---addAvInLive---entry
 AVInLive #: 2
 ---addAvInLive---exit
 ---storeAVsInLive---exit
 ---copyAVsOut---entry
 AVsOut size: 3
 ---copyAVsOut---exit
 ---doCall---exit: 0
 ---DOSBCALL---exit: 0
