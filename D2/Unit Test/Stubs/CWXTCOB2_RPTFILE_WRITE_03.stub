<?xml version="1.0" encoding="UTF-8"?>
<stub:stub xmlns:checkconditions="http://www.compuware.com/model/xml/checkconditions" xmlns:listructure="http://www.compuware.com/model/xml/listructure" xmlns:properties="http://www.compuware.com/model/xml/properties" xmlns:stub="http://www.compuware.com/model/xml/stub" alias="" encoding="1047" id="Unit%20Test/Stubs/CWXTCOB2_RPTFILE_WRITE_03.stub" stubtype="QSAM WRITE" target="RPTFILE" token="140000">
  <stub:description>Created: 31 oct. 2018 10:54:39</stub:description>
  <stub:stubdata id="0" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_ERROR_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_ERROR_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_ERROR-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_ERROR-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_ERROR-LINE.listructure#ERROR_LINE" id="arg0.ERROR_LINE">
        <properties:properties>
          <properties:property name="value" type="string">40C9D5E5C1D3C9C440C5D4D7D3D6E8C5C540E3E8D7C540404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_ERROR-LINE.listructure#ERROR_LINE.ERROR_LINE" id="output0.arg0.ERROR_LINE.ERROR_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output0.arg0.ERROR_LINE.ERROR_LINE">
        <checkconditions:expression>' INVALID EMPLOYEE TYPE' eq result.arg0.ERROR_LINE.ERROR_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"> INVALID EMPLOYEE TYPE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="1" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output1.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output1.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="2" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output2.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output2.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="3" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output3.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output3.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="4" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_HDR1.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_HDR1.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1" id="arg0.EMPLOYEE_HDR1">
        <properties:properties>
          <properties:property name="value" type="string">40D9E4D540C4C1E3C54040F1F061F3F161F1F840404040404040C5D4D7D3D6E8C5C540C3D6D4D7C5D5E2C1E3C9D6D540D9C5D7D6D9E3404040404040404040404040404040404040D7C1C7C5404040F1</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER0" id="output4.arg0.EMPLOYEE_HDR1.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER1" id="output4.arg0.EMPLOYEE_HDR1.FILLER1" offset="1"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_RUN_MM" id="output4.arg0.EMPLOYEE_HDR1.EMP_RUN_MM" offset="11"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER2" id="output4.arg0.EMPLOYEE_HDR1.FILLER2" offset="13"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_RUN_DD" id="output4.arg0.EMPLOYEE_HDR1.EMP_RUN_DD" offset="14"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER3" id="output4.arg0.EMPLOYEE_HDR1.FILLER3" offset="16"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_RUN_YY" id="output4.arg0.EMPLOYEE_HDR1.EMP_RUN_YY" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER4" id="output4.arg0.EMPLOYEE_HDR1.FILLER4" offset="19"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER5" id="output4.arg0.EMPLOYEE_HDR1.FILLER5" offset="26"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER6" id="output4.arg0.EMPLOYEE_HDR1.FILLER6" offset="54"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.FILLER7" id="output4.arg0.EMPLOYEE_HDR1.FILLER7" offset="72"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR1.listructure#EMPLOYEE_HDR1.EMP_PAGE" id="output4.arg0.EMPLOYEE_HDR1.EMP_PAGE" offset="77"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR1.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER1">
        <checkconditions:expression>'RUN DATE' eq result.arg0.EMPLOYEE_HDR1.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">RUN DATE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.EMP_RUN_MM">
        <checkconditions:expression>BigDecimalCreator.make('10').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_RUN_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">10</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_HDR1.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.EMP_RUN_DD">
        <checkconditions:expression>BigDecimalCreator.make('31').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_RUN_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">31</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER3">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_HDR1.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.EMP_RUN_YY">
        <checkconditions:expression>BigDecimalCreator.make('18').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_RUN_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">18</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR1.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER5">
        <checkconditions:expression>'EMPLOYEE COMPENSATION REPORT' eq result.arg0.EMPLOYEE_HDR1.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EMPLOYEE COMPENSATION REPORT</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR1.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.FILLER7">
        <checkconditions:expression>'PAGE' eq result.arg0.EMPLOYEE_HDR1.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">PAGE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output4.arg0.EMPLOYEE_HDR1.EMP_PAGE">
        <checkconditions:expression>BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_HDR1.EMP_PAGE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="5" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output5.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output5.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="6" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output6.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output6.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="7" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_HDR2.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_HDR2.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2" id="arg0.EMPLOYEE_HDR2">
        <properties:properties>
          <properties:property name="value" type="string">40404040404040404040404040404040404040404040404040404040404040C8C9D9C54040E8D9E240D6C640404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER0" id="output7.arg0.EMPLOYEE_HDR2.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER1" id="output7.arg0.EMPLOYEE_HDR2.FILLER1" offset="31"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER2" id="output7.arg0.EMPLOYEE_HDR2.FILLER2" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER3" id="output7.arg0.EMPLOYEE_HDR2.FILLER3" offset="37"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR2.listructure#EMPLOYEE_HDR2.FILLER4" id="output7.arg0.EMPLOYEE_HDR2.FILLER4" offset="43"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR2.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR2.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR2.FILLER1">
        <checkconditions:expression>'HIRE' eq result.arg0.EMPLOYEE_HDR2.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">HIRE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR2.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR2.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR2.FILLER3">
        <checkconditions:expression>'YRS OF' eq result.arg0.EMPLOYEE_HDR2.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">YRS OF</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output7.arg0.EMPLOYEE_HDR2.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR2.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="8" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_HDR3.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_HDR3.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3" id="arg0.EMPLOYEE_HDR3">
        <properties:properties>
          <properties:property name="value" type="string">40C5D4D7D3D6E8C5C540D5C1D4C5404040D9C5C7C9D6D540E3E8D7C5404040C4C1E3C54040E2C5D9E5C9C3C54040E2C1D3C1D9E8404040D661E3404040C3D6D4D4C9E2E2C9D6D540404040E3D6E3C1D3</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER0" id="output8.arg0.EMPLOYEE_HDR3.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER1" id="output8.arg0.EMPLOYEE_HDR3.FILLER1" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER2" id="output8.arg0.EMPLOYEE_HDR3.FILLER2" offset="14"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER3" id="output8.arg0.EMPLOYEE_HDR3.FILLER3" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER4" id="output8.arg0.EMPLOYEE_HDR3.FILLER4" offset="23"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER5" id="output8.arg0.EMPLOYEE_HDR3.FILLER5" offset="24"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER6" id="output8.arg0.EMPLOYEE_HDR3.FILLER6" offset="28"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER7" id="output8.arg0.EMPLOYEE_HDR3.FILLER7" offset="31"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER8" id="output8.arg0.EMPLOYEE_HDR3.FILLER8" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER9" id="output8.arg0.EMPLOYEE_HDR3.FILLER9" offset="37"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER10" id="output8.arg0.EMPLOYEE_HDR3.FILLER10" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER11" id="output8.arg0.EMPLOYEE_HDR3.FILLER11" offset="46"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER12" id="output8.arg0.EMPLOYEE_HDR3.FILLER12" offset="52"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER13" id="output8.arg0.EMPLOYEE_HDR3.FILLER13" offset="55"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER14" id="output8.arg0.EMPLOYEE_HDR3.FILLER14" offset="58"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER15" id="output8.arg0.EMPLOYEE_HDR3.FILLER15" offset="61"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER16" id="output8.arg0.EMPLOYEE_HDR3.FILLER16" offset="71"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-HDR3.listructure#EMPLOYEE_HDR3.FILLER17" id="output8.arg0.EMPLOYEE_HDR3.FILLER17" offset="75"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER1">
        <checkconditions:expression>'EMPLOYEE NAME' eq result.arg0.EMPLOYEE_HDR3.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EMPLOYEE NAME</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER3">
        <checkconditions:expression>'REGION' eq result.arg0.EMPLOYEE_HDR3.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">REGION</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER5">
        <checkconditions:expression>'TYPE' eq result.arg0.EMPLOYEE_HDR3.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TYPE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER7">
        <checkconditions:expression>'DATE' eq result.arg0.EMPLOYEE_HDR3.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">DATE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER9">
        <checkconditions:expression>'SERVICE' eq result.arg0.EMPLOYEE_HDR3.FILLER9</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SERVICE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER10">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER10</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER11">
        <checkconditions:expression>'SALARY' eq result.arg0.EMPLOYEE_HDR3.FILLER11</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SALARY</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER12">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER12</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER13">
        <checkconditions:expression>'O/T' eq result.arg0.EMPLOYEE_HDR3.FILLER13</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">O/T</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER14">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER14</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER15">
        <checkconditions:expression>'COMMISSION' eq result.arg0.EMPLOYEE_HDR3.FILLER15</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">COMMISSION</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER16">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_HDR3.FILLER16</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output8.arg0.EMPLOYEE_HDR3.FILLER17">
        <checkconditions:expression>'TOTAL' eq result.arg0.EMPLOYEE_HDR3.FILLER17</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="9" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output9.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output9.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="10" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40D1D6C8D540E2D4C9E3C8404040404040D5D6D9E3C8404040C8404040F1F061F1F561F8F1404040F3F74040404040F8F74BF5F04040404040F04BF0F0404040404040F04BF0F040404040F8F74BF5F0</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output10.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output10.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output10.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output10.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output10.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output10.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output10.arg0.EMPLOYEE_DTL.FILLER6" offset="52"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output10.arg0.EMPLOYEE_DTL.FILLER7" offset="61"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="63"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output10.arg0.EMPLOYEE_DTL.FILLER8" offset="71"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output10.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="72"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'JOHN SMITH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">JOHN SMITH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'NORTH' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">NORTH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'H' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">H</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('10').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">10</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('15').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">15</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('81').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">81</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('37').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">37</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('87.50').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">87.50</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output10.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('87.50').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">87.50</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="11" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_DTL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_EMPLOYEE_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL" id="arg0.EMPLOYEE_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40E3C5C440D5C5E2E2D4C1D54040404040E6C5E2E340404040E2404040F0F161F3F061F7F9404040F3F9404040F8F7F5F64BF0F04040404040F04BF0F040404040F2F2F14BF2F04040F8F9F7F74BF2F0</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER0" id="output11.arg0.EMPLOYEE_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_NAME" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_NAME" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER1" id="output11.arg0.EMPLOYEE_DTL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_REGION" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER2" id="output11.arg0.EMPLOYEE_DTL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TYPE" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE" offset="25"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER3" id="output11.arg0.EMPLOYEE_DTL.FILLER3" offset="26"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_MM" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM" offset="29"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH1" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1" offset="31"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_DD" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD" offset="32"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_SLASH2" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2" offset="34"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_HIRE_YY" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY" offset="35"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER4" id="output11.arg0.EMPLOYEE_DTL.FILLER4" offset="37"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE" offset="40"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER5" id="output11.arg0.EMPLOYEE_DTL.FILLER5" offset="42"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_WAGES" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES" offset="44"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER6" id="output11.arg0.EMPLOYEE_DTL.FILLER6" offset="52"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_OT" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_OT" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER7" id="output11.arg0.EMPLOYEE_DTL.FILLER7" offset="61"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_COMM" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_COMM" offset="63"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.FILLER8" id="output11.arg0.EMPLOYEE_DTL.FILLER8" offset="71"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMPLOYEE-DTL.listructure#EMPLOYEE_DTL.EMP_DTL_TOTAL" id="output11.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL" offset="72"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_NAME">
        <checkconditions:expression>'TED NESSMAN' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_NAME</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TED NESSMAN</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_REGION">
        <checkconditions:expression>'WEST' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">WEST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE">
        <checkconditions:expression>'S' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_TYPE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">S</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM">
        <checkconditions:expression>BigDecimalCreator.make('1').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_MM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">1</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD">
        <checkconditions:expression>BigDecimalCreator.make('30').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_DD) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">30</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2">
        <checkconditions:expression>'/' eq result.arg0.EMPLOYEE_DTL.EMP_DTL_SLASH2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY">
        <checkconditions:expression>BigDecimalCreator.make('79').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_HIRE_YY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">79</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE">
        <checkconditions:expression>BigDecimalCreator.make('39').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_YRS_OF_SERVICE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">39</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES">
        <checkconditions:expression>BigDecimalCreator.make('8756.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_WAGES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">8756.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_OT">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_OT) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER7">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('221.20').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">221.20</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.FILLER8">
        <checkconditions:expression>'' eq result.arg0.EMPLOYEE_DTL.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output11.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('8977.20').compareTo(result.arg0.EMPLOYEE_DTL.EMP_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">8977.20</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="12" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output12.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output12.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="13" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_EMP_TOTAL_DTL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_EMP_TOTAL_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL" id="arg0.EMP_TOTAL_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40404040E3D6E3C1D340404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040F9F0F6F44BF7F0</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.FILLER0" id="output13.arg0.EMP_TOTAL_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.FILLER1" id="output13.arg0.EMP_TOTAL_DTL.FILLER1" offset="4"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.FILLER2" id="output13.arg0.EMP_TOTAL_DTL.FILLER2" offset="9"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_EMP-TOTAL-DTL.listructure#EMP_TOTAL_DTL.EMP_GRAND_TOTAL" id="output13.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL" offset="70"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMP_TOTAL_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.EMP_TOTAL_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMP_TOTAL_DTL.FILLER1">
        <checkconditions:expression>'TOTAL' eq result.arg0.EMP_TOTAL_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMP_TOTAL_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.EMP_TOTAL_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output13.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('9064.70').compareTo(result.arg0.EMP_TOTAL_DTL.EMP_GRAND_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">9064.70</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="14" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output14.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output14.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="15" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output15.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output15.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="16" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output16.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output16.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="17" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output17.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output17.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="18" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output18.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output18.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="19" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_REGION_HDR1.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_REGION_HDR1.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1" id="arg0.REGION_HDR1">
        <properties:properties>
          <properties:property name="value" type="string">40D9E4D540C4C1E3C54040F1F061F3F161F1F84040404040404040404040D9C5C7C9D6D5C1D340E2C1D3C5E240D9C5D7D6D9E3404040404040404040404040404040404040404040D7C1C7C5404040F2</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER0" id="output19.arg0.REGION_HDR1.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER1" id="output19.arg0.REGION_HDR1.FILLER1" offset="1"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.REG_RUN_MONTH" id="output19.arg0.REGION_HDR1.REG_RUN_MONTH" offset="11"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER2" id="output19.arg0.REGION_HDR1.FILLER2" offset="13"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.REG_RUN_DAY" id="output19.arg0.REGION_HDR1.REG_RUN_DAY" offset="14"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER3" id="output19.arg0.REGION_HDR1.FILLER3" offset="16"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.REG_RUN_YEAR" id="output19.arg0.REGION_HDR1.REG_RUN_YEAR" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER4" id="output19.arg0.REGION_HDR1.FILLER4" offset="19"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER5" id="output19.arg0.REGION_HDR1.FILLER5" offset="30"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER6" id="output19.arg0.REGION_HDR1.FILLER6" offset="51"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.FILLER7" id="output19.arg0.REGION_HDR1.FILLER7" offset="72"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR1.listructure#REGION_HDR1.REG_PAGE" id="output19.arg0.REGION_HDR1.REG_PAGE" offset="77"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER0">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR1.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER1">
        <checkconditions:expression>'RUN DATE' eq result.arg0.REGION_HDR1.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">RUN DATE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.REG_RUN_MONTH">
        <checkconditions:expression>BigDecimalCreator.make('10').compareTo(result.arg0.REGION_HDR1.REG_RUN_MONTH) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">10</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER2">
        <checkconditions:expression>'/' eq result.arg0.REGION_HDR1.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.REG_RUN_DAY">
        <checkconditions:expression>BigDecimalCreator.make('31').compareTo(result.arg0.REGION_HDR1.REG_RUN_DAY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">31</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER3">
        <checkconditions:expression>'/' eq result.arg0.REGION_HDR1.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">/</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.REG_RUN_YEAR">
        <checkconditions:expression>BigDecimalCreator.make('18').compareTo(result.arg0.REGION_HDR1.REG_RUN_YEAR) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">18</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER4">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR1.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER5">
        <checkconditions:expression>'REGIONAL SALES REPORT' eq result.arg0.REGION_HDR1.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">REGIONAL SALES REPORT</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER6">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR1.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.FILLER7">
        <checkconditions:expression>'PAGE' eq result.arg0.REGION_HDR1.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">PAGE</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output19.arg0.REGION_HDR1.REG_PAGE">
        <checkconditions:expression>BigDecimalCreator.make('2').compareTo(result.arg0.REGION_HDR1.REG_PAGE) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">2</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="20" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output20.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output20.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="21" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output21.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output21.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="22" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_REGION_HDR2.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_REGION_HDR2.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2" id="arg0.REGION_HDR2">
        <properties:properties>
          <properties:property name="value" type="string">40D4C1D5C1C7C5D9404040404040404040D9C5C7C9D6D5404040E3D6E3C1D340E2C1D3C5E24040404040E2C1D3C1D9E84040404040C3D6D4D4C9E2E2C9D6D5404040E3D6E3C1D3404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER0" id="output22.arg0.REGION_HDR2.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER1" id="output22.arg0.REGION_HDR2.FILLER1" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER2" id="output22.arg0.REGION_HDR2.FILLER2" offset="8"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER3" id="output22.arg0.REGION_HDR2.FILLER3" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER4" id="output22.arg0.REGION_HDR2.FILLER4" offset="23"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER5" id="output22.arg0.REGION_HDR2.FILLER5" offset="26"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER6" id="output22.arg0.REGION_HDR2.FILLER6" offset="37"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER7" id="output22.arg0.REGION_HDR2.FILLER7" offset="42"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER8" id="output22.arg0.REGION_HDR2.FILLER8" offset="48"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER9" id="output22.arg0.REGION_HDR2.FILLER9" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER10" id="output22.arg0.REGION_HDR2.FILLER10" offset="63"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER11" id="output22.arg0.REGION_HDR2.FILLER11" offset="66"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-HDR2.listructure#REGION_HDR2.FILLER12" id="output22.arg0.REGION_HDR2.FILLER12" offset="71"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER0">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER1">
        <checkconditions:expression>'MANAGER' eq result.arg0.REGION_HDR2.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">MANAGER</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER2">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER3">
        <checkconditions:expression>'REGION' eq result.arg0.REGION_HDR2.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">REGION</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER4">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER5">
        <checkconditions:expression>'TOTAL SALES' eq result.arg0.REGION_HDR2.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL SALES</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER6">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER7">
        <checkconditions:expression>'SALARY' eq result.arg0.REGION_HDR2.FILLER7</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SALARY</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER8">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER8</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER9">
        <checkconditions:expression>'COMMISSION' eq result.arg0.REGION_HDR2.FILLER9</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">COMMISSION</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER10">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER10</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER11">
        <checkconditions:expression>'TOTAL' eq result.arg0.REGION_HDR2.FILLER11</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output22.arg0.REGION_HDR2.FILLER12">
        <checkconditions:expression>'' eq result.arg0.REGION_HDR2.FILLER12</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="23" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output23.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output23.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="24" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL" id="arg0.REGION_DETAIL">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040D5D6D9E3C840404040404040404040F04BF0F04040404040404040F04BF0F0404040404040404040F04BF0F040404040404040F04BF0F040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER0" id="output24.arg0.REGION_DETAIL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_MANAGER" id="output24.arg0.REGION_DETAIL.REG_DTL_MANAGER" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER1" id="output24.arg0.REGION_DETAIL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_REGION" id="output24.arg0.REGION_DETAIL.REG_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER2" id="output24.arg0.REGION_DETAIL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALES" id="output24.arg0.REGION_DETAIL.REG_DTL_SALES" offset="27"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER3" id="output24.arg0.REGION_DETAIL.FILLER3" offset="36"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALARY" id="output24.arg0.REGION_DETAIL.REG_DTL_SALARY" offset="41"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER4" id="output24.arg0.REGION_DETAIL.FILLER4" offset="48"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMM" id="output24.arg0.REGION_DETAIL.REG_DTL_COMM" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER5" id="output24.arg0.REGION_DETAIL.FILLER5" offset="61"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_TOTAL" id="output24.arg0.REGION_DETAIL.REG_DTL_TOTAL" offset="64"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER6" id="output24.arg0.REGION_DETAIL.FILLER6" offset="72"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMMENT" id="output24.arg0.REGION_DETAIL.REG_DTL_COMMENT" offset="73"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_MANAGER">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_MANAGER</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_REGION">
        <checkconditions:expression>'NORTH' eq result.arg0.REGION_DETAIL.REG_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">NORTH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_SALES">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_SALARY">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALARY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output24.arg0.REGION_DETAIL.REG_DTL_COMMENT">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_COMMENT</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="25" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL" id="arg0.REGION_DETAIL">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040E2D6E4E3C840404040404040404040F04BF0F04040404040404040F04BF0F0404040404040404040F04BF0F040404040404040F04BF0F040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER0" id="output25.arg0.REGION_DETAIL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_MANAGER" id="output25.arg0.REGION_DETAIL.REG_DTL_MANAGER" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER1" id="output25.arg0.REGION_DETAIL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_REGION" id="output25.arg0.REGION_DETAIL.REG_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER2" id="output25.arg0.REGION_DETAIL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALES" id="output25.arg0.REGION_DETAIL.REG_DTL_SALES" offset="27"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER3" id="output25.arg0.REGION_DETAIL.FILLER3" offset="36"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALARY" id="output25.arg0.REGION_DETAIL.REG_DTL_SALARY" offset="41"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER4" id="output25.arg0.REGION_DETAIL.FILLER4" offset="48"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMM" id="output25.arg0.REGION_DETAIL.REG_DTL_COMM" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER5" id="output25.arg0.REGION_DETAIL.FILLER5" offset="61"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_TOTAL" id="output25.arg0.REGION_DETAIL.REG_DTL_TOTAL" offset="64"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER6" id="output25.arg0.REGION_DETAIL.FILLER6" offset="72"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMMENT" id="output25.arg0.REGION_DETAIL.REG_DTL_COMMENT" offset="73"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_MANAGER">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_MANAGER</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_REGION">
        <checkconditions:expression>'SOUTH' eq result.arg0.REGION_DETAIL.REG_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">SOUTH</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_SALES">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_SALARY">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALARY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output25.arg0.REGION_DETAIL.REG_DTL_COMMENT">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_COMMENT</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="26" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL" id="arg0.REGION_DETAIL">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040C5C1E2E34040404040404040404040F04BF0F04040404040404040F04BF0F0404040404040404040F04BF0F040404040404040F04BF0F040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER0" id="output26.arg0.REGION_DETAIL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_MANAGER" id="output26.arg0.REGION_DETAIL.REG_DTL_MANAGER" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER1" id="output26.arg0.REGION_DETAIL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_REGION" id="output26.arg0.REGION_DETAIL.REG_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER2" id="output26.arg0.REGION_DETAIL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALES" id="output26.arg0.REGION_DETAIL.REG_DTL_SALES" offset="27"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER3" id="output26.arg0.REGION_DETAIL.FILLER3" offset="36"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALARY" id="output26.arg0.REGION_DETAIL.REG_DTL_SALARY" offset="41"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER4" id="output26.arg0.REGION_DETAIL.FILLER4" offset="48"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMM" id="output26.arg0.REGION_DETAIL.REG_DTL_COMM" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER5" id="output26.arg0.REGION_DETAIL.FILLER5" offset="61"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_TOTAL" id="output26.arg0.REGION_DETAIL.REG_DTL_TOTAL" offset="64"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER6" id="output26.arg0.REGION_DETAIL.FILLER6" offset="72"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMMENT" id="output26.arg0.REGION_DETAIL.REG_DTL_COMMENT" offset="73"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_MANAGER">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_MANAGER</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_REGION">
        <checkconditions:expression>'EAST' eq result.arg0.REGION_DETAIL.REG_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">EAST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_SALES">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_SALARY">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALARY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output26.arg0.REGION_DETAIL.REG_DTL_COMMENT">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_COMMENT</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="27" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_REGION_DETAIL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL" id="arg0.REGION_DETAIL">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040E6C5E2E34040404040404040F2F7F6F54BF0F04040404040404040F04BF0F04040404040404040F5F54BF3F0404040404040F5F54BF3F040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER0" id="output27.arg0.REGION_DETAIL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_MANAGER" id="output27.arg0.REGION_DETAIL.REG_DTL_MANAGER" offset="1"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER1" id="output27.arg0.REGION_DETAIL.FILLER1" offset="16"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_REGION" id="output27.arg0.REGION_DETAIL.REG_DTL_REGION" offset="17"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER2" id="output27.arg0.REGION_DETAIL.FILLER2" offset="22"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALES" id="output27.arg0.REGION_DETAIL.REG_DTL_SALES" offset="27"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER3" id="output27.arg0.REGION_DETAIL.FILLER3" offset="36"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_SALARY" id="output27.arg0.REGION_DETAIL.REG_DTL_SALARY" offset="41"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER4" id="output27.arg0.REGION_DETAIL.FILLER4" offset="48"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMM" id="output27.arg0.REGION_DETAIL.REG_DTL_COMM" offset="53"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER5" id="output27.arg0.REGION_DETAIL.FILLER5" offset="61"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_TOTAL" id="output27.arg0.REGION_DETAIL.REG_DTL_TOTAL" offset="64"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.FILLER6" id="output27.arg0.REGION_DETAIL.FILLER6" offset="72"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_REGION-DETAIL.listructure#REGION_DETAIL.REG_DTL_COMMENT" id="output27.arg0.REGION_DETAIL.REG_DTL_COMMENT" offset="73"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_MANAGER">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_MANAGER</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER1">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_REGION">
        <checkconditions:expression>'WEST' eq result.arg0.REGION_DETAIL.REG_DTL_REGION</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">WEST</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_SALES">
        <checkconditions:expression>BigDecimalCreator.make('2765.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALES) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">2765.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_SALARY">
        <checkconditions:expression>BigDecimalCreator.make('0.00').compareTo(result.arg0.REGION_DETAIL.REG_DTL_SALARY) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">0.00</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER4">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER4</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_COMM">
        <checkconditions:expression>BigDecimalCreator.make('55.30').compareTo(result.arg0.REGION_DETAIL.REG_DTL_COMM) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">55.30</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER5">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER5</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('55.30').compareTo(result.arg0.REGION_DETAIL.REG_DTL_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">55.30</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.FILLER6">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.FILLER6</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output27.arg0.REGION_DETAIL.REG_DTL_COMMENT">
        <checkconditions:expression>'' eq result.arg0.REGION_DETAIL.REG_DTL_COMMENT</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="28" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_BLANK_LINE.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE" id="arg0.BLANK_LINE">
        <properties:properties>
          <properties:property name="value" type="string">4040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_BLANK-LINE.listructure#BLANK_LINE.BLANK_LINE" id="output28.arg0.BLANK_LINE.BLANK_LINE" offset="0"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output28.arg0.BLANK_LINE.BLANK_LINE">
        <checkconditions:expression>'' eq result.arg0.BLANK_LINE.BLANK_LINE</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
  <stub:stubdata id="29" name="RPTFILE">
    <stub:interface>../Interfaces/CWXTCOB2_RPTFILE_MGMT_TOTAL_DTL.interface#Unit%20Test/Interfaces/CWXTCOB2_RPTFILE_MGMT_TOTAL_DTL.interface</stub:interface>
    <stub:output listructure="../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#Unit%20Test/Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure">
      <stub:data baseType="listructure:structType ../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#MGMT_TOTAL_DTL" id="arg0.MGMT_TOTAL_DTL">
        <properties:properties>
          <properties:property name="value" type="string">40404040E3D6E3C1D340404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040F6F56BF3F04040404040404040</properties:property>
        </properties:properties>
      </stub:data>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#MGMT_TOTAL_DTL.FILLER0" id="output29.arg0.MGMT_TOTAL_DTL.FILLER0" offset="0"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#MGMT_TOTAL_DTL.FILLER1" id="output29.arg0.MGMT_TOTAL_DTL.FILLER1" offset="4"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#MGMT_TOTAL_DTL.FILLER2" id="output29.arg0.MGMT_TOTAL_DTL.FILLER2" offset="9"/>
      <stub:data baseType="listructure:numberType ../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#MGMT_TOTAL_DTL.MGMT_GRAND_TOTAL" id="output29.arg0.MGMT_TOTAL_DTL.MGMT_GRAND_TOTAL" offset="62"/>
      <stub:data baseType="listructure:stringType ../Structures/CWXTCOB2_RPTFILE_MGMT-TOTAL-DTL.listructure#MGMT_TOTAL_DTL.FILLER3" id="output29.arg0.MGMT_TOTAL_DTL.FILLER3" offset="72"/>
    </stub:output>
    <stub:checkconditions>
      <checkconditions:simpleCheckcondition refData="#output29.arg0.MGMT_TOTAL_DTL.FILLER0">
        <checkconditions:expression>'' eq result.arg0.MGMT_TOTAL_DTL.FILLER0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output29.arg0.MGMT_TOTAL_DTL.FILLER1">
        <checkconditions:expression>'TOTAL' eq result.arg0.MGMT_TOTAL_DTL.FILLER1</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string">TOTAL</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output29.arg0.MGMT_TOTAL_DTL.FILLER2">
        <checkconditions:expression>'' eq result.arg0.MGMT_TOTAL_DTL.FILLER2</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output29.arg0.MGMT_TOTAL_DTL.MGMT_GRAND_TOTAL">
        <checkconditions:expression>BigDecimalCreator.make('65.30').compareTo(result.arg0.MGMT_TOTAL_DTL.MGMT_GRAND_TOTAL) eq 0</checkconditions:expression>
        <checkconditions:expectation assert="=" type="number">65.30</checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
      <checkconditions:simpleCheckcondition refData="#output29.arg0.MGMT_TOTAL_DTL.FILLER3">
        <checkconditions:expression>'' eq result.arg0.MGMT_TOTAL_DTL.FILLER3</checkconditions:expression>
        <checkconditions:expectation assert="=" type="string"></checkconditions:expectation>
      </checkconditions:simpleCheckcondition>
    </stub:checkconditions>
  </stub:stubdata>
</stub:stub>